# versão do python utilizada 3.10
# bibliotecas importadas
import tkinter as tk
from tkinter import messagebox

# Definir janela e seus reespectivos componentes

class CalculadoraIMC:
    def __init__(self, master):
        self.master = master
        master.title('Calculo de IMC - Indice de massa corporal')
        master.minsize(400, 300)
        janela.configure(bg='light gray')  # fundo cinza claro

# modifiquei algumas cores
        tk.Label(master, text='Nome do Paciente:', bg='light gray').grid(row=0, column=0, padx=12, pady=12)
        self.nome_entry = tk.Entry(master)
        self.nome_entry.grid(row=0, column=1, padx=12, pady=12)

        tk.Label(master, text='Altura (M):', bg='light gray').grid(row=1, column=0, padx=12, pady=12)
        self.altura_entry = tk.Entry(master)
        self.altura_entry.grid(row=1, column=1, padx=12, pady=12)

        tk.Label(master, text='Peso em (Kg):', bg='light gray').grid(row=2, column=0, padx=12, pady=12)
        self.peso_entry = tk.Entry(master)
        self.peso_entry.grid(row=2, column=1, padx=12, pady=12)

        tk.Label(janela, text='Endereço Completo:', bg='light gray').grid(row=3, column=0, padx=12, pady=12)
        endereco_entry = tk.Entry(janela)
        endereco_entry.grid(row=3, column=1, padx=12, pady=12)

        self.calcular_button = tk.Button(master, text='Calcular', bg='green', command=self.calcular_imc)
        self.calcular_button.grid(row=5, column=0, pady=12, padx=12)

        self.reiniciar_button = tk.Button(master, text='Reiniciar', bg='white', command=self.reiniciar)
        self.reiniciar_button.grid(row=5, column=1, pady=12, padx=12)

        self.sair_button = tk.Button(master, text='Sair', bg='red', command=self.sair)
        self.sair_button.grid(row=5, column=2, pady=12, padx=12)

        self.resultado_label = tk.Label(master, text='',bg='light gray')
        self.resultado_label.grid(row=4, column=0, columnspan=3, pady=12, padx=12)

# Calcular o IMC segundo as informações fornecidas pelo o usuário.

    def calcular_imc(self):
        try:
            altura = float(self.altura_entry.get())
            peso = float(self.peso_entry.get())
            imc = peso / (altura * altura)
            categoria = self.obter_categoria(imc)
            resultado = f'{self.nome_entry.get()}, seu IMC é: {imc:.2f}, Categoria: {categoria}'
            self.resultado_label.config(text=resultado)
        except ValueError:
            messagebox.showerror('Erro', 'Altura e peso precisam ser valores numéricos, reinicie o programa.')

# classificar o nivel de peso segundo cada IMC.

    def obter_categoria(self, imc):
        if imc < 18.5:
            return 'Abaixo do peso'
        elif 18.5 <= imc < 24.9:
            return 'Peso normal'
        elif 25 <= imc < 29.9:
            return 'Sobrepeso'
        elif 30 <= imc < 34.9:
            return 'Obesidade leve'
        elif 35 <= imc < 39.9:
            return 'Obesidade moderada'
        else:
            return 'Obesidade grave'

    def reiniciar(self):
        self.nome_entry.delete(0, tk.END)
        self.altura_entry.delete(0, tk.END)
        self.peso_entry.delete(0, tk.END)
        self.resultado_label.config(text="")

    def sair(self):
        if messagebox.askokcancel('Sair', 'Você realmente deseja sair?'):
            self.master.destroy()

# Criar a janela principal
janela = tk.Tk()
app = CalculadoraIMC(janela)

# Iniciar o loop principal
janela.mainloop()
